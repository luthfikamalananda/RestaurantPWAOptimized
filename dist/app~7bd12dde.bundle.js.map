{"version":3,"file":"app~7bd12dde.bundle.js","mappings":";0YACA,8hGAAAA,GAAA,wBAAAA,EAAA,sBAAAA,GAAA,iBAAAA,GAAA,0oDAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,4bAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,yhBAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,qGAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,kkBAEA,IAAQC,EAAuDC,EAAAA,EAAAA,cAAxCC,EAAwCD,EAAAA,EAAAA,iBAAtBE,EAAsBF,EAAAA,EAAAA,kBAEzDG,GAAYC,EAAAA,EAAAA,IAAOL,EAAeE,EAAkB,CACxDI,QADwD,SAChDC,GACNA,EAASC,kBAAkBL,EAAmB,CAAEM,QAAS,MAC1D,IA4BH,QAzB8B,CACtBC,cADsB,SACRC,GAAI,oGACjBA,EADiB,iEAMRP,EANQ,uCAMGQ,IAAIT,EAAmBQ,IAN1B,4CAOvB,EACKE,kBATsB,WASF,iHACVT,EADU,uCACCU,OAAOX,IADR,4CAEzB,EACKY,cAZsB,SAYRC,GAAY,oGAEzBA,EAAWC,eAAe,MAFD,iEAMhBb,EANgB,uCAMLc,IAAIf,EAAmBa,IANlB,4CAO/B,EACKG,iBApBsB,SAoBLR,GAAI,iHACXP,EADW,8CACOD,EAAmBQ,IAD1B,4CAE1B,gDCxBH,QAPqB,CACnBS,gBAAiB,GAAF,OAAKnB,EAAAA,EAAAA,SAAL,SACfoB,iBAAkB,GAAF,OAAKpB,EAAAA,EAAAA,eAAL,KAChBqB,WAAY,GAAF,OAAKrB,EAAAA,EAAAA,SAAL,WACVsB,OAAQ,SAACZ,GAAD,gBAAWV,EAAAA,EAAAA,SAAX,mBAAqCU,EAArC,sPCLV,8hGAAAZ,GAAA,wBAAAA,EAAA,sBAAAA,GAAA,iBAAAA,GAAA,0oDAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,4bAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,yhBAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,qGAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,wuBA2BA,QAzBMyB,0MACJ,sGACyBC,MAAMC,EAAAA,iBAD/B,cACQC,EADR,gBAE6BA,EAASC,OAFtC,cAEQC,EAFR,yBAGSA,GAHT,sIAMA,WAA+BlB,GAA/B,uFACyBc,MAAMC,EAAAA,OAAoBf,IADnD,cACQgB,EADR,yBAESA,EAASC,QAFlB,kIAKA,WAA0BE,GAA1B,yFACyBL,MAAMC,EAAAA,WAAyB,CACpDK,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAUL,KANzB,cACQH,EADR,gBAQ6BA,EAASC,OARtC,cAQQC,EARR,yBASSA,GATT,yJAZIL,mCCWN,QAde,CACbY,SAAU,sCACVC,eAAgB,oDAEhBC,WAAY,gBAEZtC,cAAe,2BACfE,iBAAkB,EAClBC,kBAAmB,cAEnBoC,WAAY,0DACZC,YAAa,sHCATC,gBAAM,IAAIC,EAAAA,EAAI,CAClBC,OAAQC,SAASC,cAAc,cAC/BC,OAAQF,SAASC,cAAc,WAC/BE,QAASH,SAASC,cAAc,YAGlCG,OAAOC,iBAAiB,cAAc,WACpCR,EAAIS,YACL,IAEDF,OAAOC,iBAAiB,QAAQ,WAC9BR,EAAIS,cACJC,EAAAA,EAAAA,IACD","sources":["webpack://restaurant-apps/./src/scripts/data/favorite-restaurant-idb.js","webpack://restaurant-apps/./src/scripts/globals/api-endpoint.js","webpack://restaurant-apps/./src/scripts/data/restaurant-source.js","webpack://restaurant-apps/./src/scripts/globals/config.js","webpack://restaurant-apps/./src/scripts/index.js"],"sourcesContent":["import { openDB } from 'idb';\r\nimport CONFIG from '../globals/config';\r\n\r\nconst { DATABASE_NAME, DATABASE_VERSION, OBJECT_STORE_NAME } = CONFIG;\r\n\r\nconst dbPromise = openDB(DATABASE_NAME, DATABASE_VERSION, {\r\n  upgrade(database) {\r\n    database.createObjectStore(OBJECT_STORE_NAME, { keyPath: 'id' });\r\n  },\r\n});\r\n\r\nconst FavoriteRestaurantIdb = {\r\n  async getRestaurant(id) {\r\n    if (!id) {\r\n      return;\r\n    }\r\n\r\n    // eslint-disable-next-line consistent-return\r\n    return (await dbPromise).get(OBJECT_STORE_NAME, id);\r\n  },\r\n  async getAllRestaurants() {\r\n    return (await dbPromise).getAll(OBJECT_STORE_NAME);\r\n  },\r\n  async putRestaurant(restaurant) {\r\n    // eslint-disable-next-line no-prototype-builtins\r\n    if (!restaurant.hasOwnProperty('id')) {\r\n      return;\r\n    }\r\n    // eslint-disable-next-line consistent-return\r\n    return (await dbPromise).put(OBJECT_STORE_NAME, restaurant);\r\n  },\r\n  async deleteRestaurant(id) {\r\n    return (await dbPromise).delete(OBJECT_STORE_NAME, id);\r\n  },\r\n};\r\n\r\nexport default FavoriteRestaurantIdb;\r\n","import CONFIG from './config';\r\n\r\nconst API_ENDPOINT = {\r\n  RESTAURANT_LIST: `${CONFIG.BASE_URL}/list`,\r\n  RESTAURANT_IMAGE: `${CONFIG.BASE_IMAGE_URL}/`,\r\n  NEW_REVIEW: `${CONFIG.BASE_URL}/review`,\r\n  DETAIL: (id) => `${CONFIG.BASE_URL}/detail/${id}`,\r\n};\r\n\r\nexport default API_ENDPOINT;\r\n","/* eslint-disable no-unused-vars */\r\nimport API_ENDPOINT from '../globals/api-endpoint';\r\n\r\nclass RestaurantSource {\r\n  static async allRestaurants() {\r\n    const response = await fetch(API_ENDPOINT.RESTAURANT_LIST);\r\n    const responseJson = await response.json();\r\n    return responseJson;\r\n  }\r\n\r\n  static async detailRestaurants(id) {\r\n    const response = await fetch(API_ENDPOINT.DETAIL(id));\r\n    return response.json();\r\n  }\r\n\r\n  static async uploadReview(reviewData) {\r\n    const response = await fetch(API_ENDPOINT.NEW_REVIEW, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(reviewData),\r\n    });\r\n    const responseJson = await response.json();\r\n    return responseJson;\r\n  }\r\n}\r\n\r\nexport default RestaurantSource;\r\n","const CONFIG = {\r\n  BASE_URL: 'https://restaurant-api.dicoding.dev',\r\n  BASE_IMAGE_URL: 'https://restaurant-api.dicoding.dev/images/medium',\r\n  // ----- CACHE ------\r\n  CACHE_NAME: 'LikedMoviesDB',\r\n  // ----- IndexedDB ------\r\n  DATABASE_NAME: 'restaurant-apps-database',\r\n  DATABASE_VERSION: 1,\r\n  OBJECT_STORE_NAME: 'restaurants',\r\n  // ---- Image ----\r\n  DUMMY_FOOD: 'https://cdn-icons-png.flaticon.com/512/2276/2276931.png',\r\n  DUMMY_DRINK: 'https://cdn-icons-png.flaticon.com/512/2738/2738730.png',\r\n};\r\n\r\nexport default CONFIG;\r\n","import 'regenerator-runtime'; /* for async await transpile */\r\nimport App from './views/app';\r\nimport '../styles/main.css';\r\nimport '../styles/responsive.css';\r\nimport swRegister from './utils/sw-register';\r\nimport 'lazysizes';\r\nimport 'lazysizes/plugins/parent-fit/ls.parent-fit';\r\n\r\nconst START = 10;\r\nconst NUMBER_OF_IMAGES = 100;\r\n\r\nconst app = new App({\r\n  button: document.querySelector('#hamburger'),\r\n  drawer: document.querySelector('#drawer'),\r\n  content: document.querySelector('#main'),\r\n});\r\n\r\nwindow.addEventListener('hashchange', () => {\r\n  app.renderPage();\r\n});\r\n\r\nwindow.addEventListener('load', () => {\r\n  app.renderPage();\r\n  swRegister();\r\n});\r\n"],"names":["i","DATABASE_NAME","CONFIG","DATABASE_VERSION","OBJECT_STORE_NAME","dbPromise","openDB","upgrade","database","createObjectStore","keyPath","getRestaurant","id","get","getAllRestaurants","getAll","putRestaurant","restaurant","hasOwnProperty","put","deleteRestaurant","RESTAURANT_LIST","RESTAURANT_IMAGE","NEW_REVIEW","DETAIL","RestaurantSource","fetch","API_ENDPOINT","response","json","responseJson","reviewData","method","headers","body","JSON","stringify","BASE_URL","BASE_IMAGE_URL","CACHE_NAME","DUMMY_FOOD","DUMMY_DRINK","app","App","button","document","querySelector","drawer","content","window","addEventListener","renderPage","swRegister"],"sourceRoot":""}